if (is.null(CellChat_DB)) {
CellChatDB <- CellChatDB.human
} else if (!CellChat_DB %in% database) {
message("--------\nError\n--------\t==> -------Only 'CellChatDB.human' and 'CellChatDB.mouse' supported!")
} else if(CellChat_DB == database[1]){
CellChatDB <- CellChatDB.human
} else if (CellChat_DB == database[2]) {
CellChatDB <- CellChatDB.mouse
}
CellChatDB
devtools::build()
devtools::build()
install.packages("~/Xiapeng_files/OneGene_0.0.1.tar.gz", repos = NULL, type = "source")
devtools::install()
devtools::build()
install.packages("~/Xiapeng_files/OneGene_0.0.2.tar.gz", repos = NULL, type = "source")
#'
#' @param data A seurat object
#' @param plot.gene A vector including gene to plot in the volcano plot
#' @param plot.gene.number The default will display the top 5 up and down regulated genes
#' @param label.text.size The size of the gene, default is 10
#'
#' @return
#' @export
#'
#' @examples
plot_scRNA_volcano <- function(data,plot.gene=NULL,plot.gene.number = 5,
label.text.size=10) {
library(tidyverse)
library(ggrepel)
options(ggrepel.max.overlaps = Inf)
data <- data %>% mutate('gene'=row.names(.))
data <- data %>% select(gene,avg_log2FC, p_val, pct.1, pct.2) %>%
mutate(diff_pct = pct.1 - pct.2) %>%
mutate(group = if_else(p_val < 0.05 & avg_log2FC > 1, "sig_up",
if_else(p_val < 0.05 & avg_log2FC < -1, "sig_down", "no_sig"))) %>%
mutate('label' = NA)
if (is.null(plot.gene)) {
# 前五个上调
up_gene <- data %>% arrange(desc(diff_pct)) %>% .[,'gene'] %>% c() %>% .[1:plot.gene.number]
# 前五个下调
down_10 <- data %>% arrange(diff_pct) %>% .[,'gene'] %>% c() %>% .[1:plot.gene.number]
# 标记基因
gene_label <- c(up_10,down_10)
# 索引基因位置
index <- match(gene_label,data$gene)
# 增加基因名称为标记准备
data$label[index] <- gene_label
} else  {
# 标记基因
gene_label <- as.vector(plot.gene)
# 索引基因位置
index <- match(gene_label,data$gene)
# 增加基因名称为标记准备
data$label[index] <- gene_label
}
# ------------------绘图准备--------------------
colnames(data) <- c("gene",'log2FoldChange',
'pvalue',
"pct.1","pct.2",
"diff_pct", 'Group',"label"
)
data$Group <- factor(data$Group,levels = c("sig_down","no_sig","sig_up"))
data$Group
# ------------------绘图-------------------------
ggplot(data,aes(log2FoldChange,-log10(pvalue),fill=Group))+
geom_point(shape=21,alpha=0.5,aes(size=-log10(pvalue),color=Group))+
scale_fill_manual(values=c("#6697ea", "grey60","#b02428"))+ #差异分组填充颜色
scale_color_manual(values=c("#6697ea", "grey60","#b02428"))+ #边界颜色 # "midnightblue", "grey60","darkred"
guides(size=F)+  #去掉size大小图例
geom_label_repel(aes(x = log2FoldChange,y = -log10(pvalue),size=label.text.size,label =label),fill = "white")+
###坐标轴名称
xlab(expression('log'[2]*'(FoldChange)'))+
ylab(expression('-log'[10]*'(pvalue)'))+
###画出分界线
geom_vline(xintercept=c(-logfc.cut,logfc.cut),lty=2,col="black",lwd=0.5) +
geom_hline(yintercept = -log10(p.cut),lty=2,col="black",lwd=0.5) +
###指定分类颜色
theme_test()+
####设置标题位置及字体大小
theme(legend.position = "top",legend.title = element_blank())+
###添加文本注释
annotate('text',x=-4,y=0.85*max(-log10(data$pvalue)),fontface="bold.italic",size=4,color='red',
label='Genes \n Down Regulated')+
annotate('text',x=4,y=0.85*max(-log10(data$pvalue)),fontface="bold.italic",size=4,color='red',
label='Genes \n  Up Regulated')
}
source("~/Xiapeng_files/OneGene/R/plot_scRNA_volcano.R")
plot_scRNA_volcano <- function(data,plot.gene=NULL,plot.gene.number = 5,
label.text.size=10) {
library(tidyverse)
library(ggrepel)
options(ggrepel.max.overlaps = Inf)
data <- data %>% mutate('gene'=row.names(.))
data <- data %>% select(gene,avg_log2FC, p_val, pct.1, pct.2) %>%
mutate(diff_pct = pct.1 - pct.2) %>%
mutate(group = if_else(p_val < 0.05 & avg_log2FC > 1, "sig_up",
if_else(p_val < 0.05 & avg_log2FC < -1, "sig_down", "no_sig"))) %>%
mutate('label' = NA)
if (is.null(plot.gene)) {
# 前五个上调
up_gene <- data %>% arrange(desc(diff_pct)) %>% .[,'gene'] %>% c() %>% .[1:plot.gene.number]
# 前五个下调
down_gene <- data %>% arrange(diff_pct) %>% .[,'gene'] %>% c() %>% .[1:plot.gene.number]
# 标记基因
gene_label <- c(up_gene,down_gene)
# 索引基因位置
index <- match(gene_label,data$gene)
# 增加基因名称为标记准备
data$label[index] <- gene_label
} else  {
# 标记基因
gene_label <- as.vector(plot.gene)
# 索引基因位置
index <- match(gene_label,data$gene)
# 增加基因名称为标记准备
data$label[index] <- gene_label
}
# ------------------绘图准备--------------------
colnames(data) <- c("gene",'log2FoldChange',
'pvalue',
"pct.1","pct.2",
"diff_pct", 'Group',"label"
)
data$Group <- factor(data$Group,levels = c("sig_down","no_sig","sig_up"))
data$Group
# ------------------绘图-------------------------
ggplot(data,aes(log2FoldChange,-log10(pvalue),fill=Group))+
geom_point(shape=21,alpha=0.5,aes(size=-log10(pvalue),color=Group))+
scale_fill_manual(values=c("#6697ea", "grey60","#b02428"))+ #差异分组填充颜色
scale_color_manual(values=c("#6697ea", "grey60","#b02428"))+ #边界颜色 # "midnightblue", "grey60","darkred"
guides(size=F)+  #去掉size大小图例
geom_label_repel(aes(x = log2FoldChange,y = -log10(pvalue),size=label.text.size,label =label),fill = "white")+
###坐标轴名称
xlab(expression('log'[2]*'(FoldChange)'))+
ylab(expression('-log'[10]*'(pvalue)'))+
###画出分界线
geom_vline(xintercept=c(-logfc.cut,logfc.cut),lty=2,col="black",lwd=0.5) +
geom_hline(yintercept = -log10(p.cut),lty=2,col="black",lwd=0.5) +
###指定分类颜色
theme_test()+
####设置标题位置及字体大小
theme(legend.position = "top",legend.title = element_blank())+
###添加文本注释
annotate('text',x=-4,y=0.85*max(-log10(data$pvalue)),fontface="bold.italic",size=4,color='red',
label='Genes \n Down Regulated')+
annotate('text',x=4,y=0.85*max(-log10(data$pvalue)),fontface="bold.italic",size=4,color='red',
label='Genes \n  Up Regulated')
}
library(ggplot2)
library(OneGene)
#' @param data A seurat object
#' @param plot.gene A vector including gene to plot in the volcano plot
#' @param plot.gene.number The default will display the top 5 up and down regulated genes
#' @param label.text.size The size of the gene, default is 10
#'
#' @return
#' @export
#'
#' @examples
#'
plot_scRNA_volcano <- function(data,plot.gene=NULL,plot.gene.number = 5,
label.text.size=80,logfc.cut=1,p.cut=0.05,
label_postion_x_left = -2.5,
label_postion_x_right = 2.5,
label_postion_y = 0.1,
base_size = 14,
legend_size = 14,
legend_position = 'top'
) {
library(tidyverse)
library(ggrepel)
options(ggrepel.max.overlaps = Inf)
data <- data %>% mutate('gene'=row.names(.))
data <- data %>% select(gene,avg_log2FC, p_val, pct.1, pct.2) %>%
mutate(diff_pct = pct.1 - pct.2) %>%
mutate(group = if_else(p_val < 0.05 & avg_log2FC > 1, "sig_up",
if_else(p_val < 0.05 & avg_log2FC < -1, "sig_down", "no_sig"))) %>%
mutate('label' = NA)
if (is.null(plot.gene)) {
# 前五个上调
up_gene <- data %>% arrange(desc(avg_log2FC)) %>% .[,'gene'] %>% c() %>% .[1:plot.gene.number]
# 前五个下调
down_gene <- data %>% arrange(avg_log2FC) %>% .[,'gene'] %>% c() %>% .[1:plot.gene.number]
# 标记基因
gene_label <- c(up_gene,down_gene)
# 索引基因位置
index <- match(gene_label,data$gene)
# 增加基因名称为标记准备
data$label[index] <- gene_label
} else  {
# 标记基因
gene_label <- as.vector(plot.gene)
# 索引基因位置
index <- match(gene_label,data$gene)
# 增加基因名称为标记准备
data$label[index] <- gene_label
}
# ------------------绘图准备--------------------
colnames(data) <- c("gene",'log2FoldChange',
'pvalue',
"pct.1","pct.2",
"diff_pct", 'Group',"label"
)
data$Group <- factor(data$Group,levels = c("sig_down","no_sig","sig_up"))
data$Group
# ------------------绘图-------------------------
ggplot(data,aes(log2FoldChange,-log10(pvalue),fill=Group))+
geom_point(shape=21,alpha=0.5,aes(size=-log10(pvalue),color=Group))+
scale_fill_manual(values=c("#6697ea", "grey60","#b02428"))+ #差异分组填充颜色
scale_color_manual(values=c("#6697ea", "grey60","#b02428"))+ #边界颜色 # "midnightblue", "grey60","darkred"
guides(size=F)+  #去掉size大小图例
geom_label_repel(aes(x = log2FoldChange,y = -log10(pvalue),size=label.text.size,label =label),fill = "white")+
###坐标轴名称
xlab(expression('log'[2]*'(FoldChange)'))+
ylab(expression('-log'[10]*'(pvalue)'))+
###画出分界线
geom_vline(xintercept=c(-logfc.cut,logfc.cut),lty=2,col="black",lwd=0.5) +
geom_hline(yintercept = -log10(p.cut),lty=2,col="black",lwd=0.5) +
###指定分类颜色
theme_test()+
####设置标题位置及字体大小
theme(text = element_text(size = base_size),
legend.text = element_text(size = legend_size),
legend.position = legend_position,
legend.title = element_blank())+
###添加文本注释
annotate('text',x= label_postion_x_left,y=label_postion_y*max(-log10(data$pvalue)),fontface="bold.italic",size=4,color='red',
label='Genes \n Down Regulated')+
annotate('text',x= label_postion_x_right,y=label_postion_y*max(-log10(data$pvalue)),fontface="bold.italic",size=4,color='red',
label='Genes \n  Up Regulated')
}
#' @param data A seurat object
#' @param plot.gene A vector including gene to plot in the volcano plot
#' @param plot.gene.number The default will display the top 5 up and down regulated genes
#' @param label.text.size The size of the gene, default is 10
#'
#' @return
#' @export
#'
#' @examples
#'
plot_scRNA_volcano <- function(data,plot.gene=NULL,plot.gene.number = 5,
label.text.size=80,logfc.cut=1,p.cut=0.05,
label.diff_pct = T,
diff_pct.cutoff = 0.4,
label_postion_x_left = -2.5,
label_postion_x_right = 2.5,
label_postion_y = 0.1,
base_size = 14,
legend_size = 14,
legend_position = 'top'
) {
library(tidyverse)
library(ggrepel)
options(ggrepel.max.overlaps = Inf)
data <- data %>% mutate('gene'=row.names(.))
if (label.diff_pct = T) {
#' @param data A seurat object
#' @param plot.gene A vector including gene to plot in the volcano plot
#' @param plot.gene.number The default will display the top 5 up and down regulated genes
#' @param label.text.size The size of the gene, default is 10
#'
#' @return
#' @export
#'
#' @examples
#'
plot_scRNA_volcano <- function(data,plot.gene=NULL,plot.gene.number = 5,
label.text.size=80,logfc.cut=1,p.cut=0.05,
label.diff_pct = T,
diff_pct.cutoff = 0.4,
label_postion_x_left = -2.5,
label_postion_x_right = 2.5,
label_postion_y = 0.1,
base_size = 14,
legend_size = 14,
legend_position = 'top'
) {
library(tidyverse)
library(ggrepel)
options(ggrepel.max.overlaps = Inf)
data <- data %>% mutate('gene'=row.names(.))
if (label.diff_pct == T) {
data <- data %>% select(gene,avg_log2FC, p_val, pct.1, pct.2) %>%
mutate(diff_pct = pct.1 - pct.2) %>%
mutate(group = if_else(p_val < p.cut & diff_pct > diff_pct.cutoff, "sig_up",
if_else(p_val < p.cut & diff_pct < -(diff_pct.cutoff), "sig_down", "no_sig"))) %>%
mutate('label' = NA)
} else {
data <- data %>% select(gene,avg_log2FC, p_val, pct.1, pct.2) %>%
mutate(diff_pct = pct.1 - pct.2) %>%
mutate(group = if_else(p_val < p.cut & avg_log2FC > logfc.cut, "sig_up",
if_else(p_val < p.cut & avg_log2FC < -(logfc.cut), "sig_down", "no_sig"))) %>%
mutate('label' = NA)
}
if (is.null(plot.gene)) {
# 前五个上调
up_gene <- data %>% arrange(desc(avg_log2FC)) %>% .[,'gene'] %>% c() %>% .[1:plot.gene.number]
# 前五个下调
down_gene <- data %>% arrange(avg_log2FC) %>% .[,'gene'] %>% c() %>% .[1:plot.gene.number]
# 标记基因
gene_label <- c(up_gene,down_gene)
# 索引基因位置
index <- match(gene_label,data$gene)
# 增加基因名称为标记准备
data$label[index] <- gene_label
} else  {
# 标记基因
gene_label <- as.vector(plot.gene)
# 索引基因位置
index <- match(gene_label,data$gene)
# 增加基因名称为标记准备
data$label[index] <- gene_label
}
# ------------------绘图准备--------------------
colnames(data) <- c("gene",'log2FoldChange',
'pvalue',
"pct.1","pct.2",
"diff_pct", 'Group',"label"
)
data$Group <- factor(data$Group,levels = c("sig_down","no_sig","sig_up"))
data$Group
# ------------------绘图-------------------------
ggplot(data,aes(log2FoldChange,-log10(pvalue),fill=Group))+
geom_point(shape=21,alpha=0.5,aes(size=-log10(pvalue),color=Group))+
scale_fill_manual(values=c("#6697ea", "grey60","#b02428"))+ #差异分组填充颜色
scale_color_manual(values=c("#6697ea", "grey60","#b02428"))+ #边界颜色 # "midnightblue", "grey60","darkred"
guides(size=F)+  #去掉size大小图例
geom_label_repel(aes(x = log2FoldChange,y = -log10(pvalue),size=label.text.size,label =label),fill = "white")+
###坐标轴名称
xlab(expression('log'[2]*'(FoldChange)'))+
ylab(expression('-log'[10]*'(pvalue)'))+
###画出分界线
geom_vline(xintercept=c(-logfc.cut,logfc.cut),lty=2,col="black",lwd=0.5) +
geom_hline(yintercept = -log10(p.cut),lty=2,col="black",lwd=0.5) +
###指定分类颜色
theme_test()+
####设置标题位置及字体大小
theme(text = element_text(size = base_size),
legend.text = element_text(size = legend_size),
legend.position = legend_position,
legend.title = element_blank())+
###添加文本注释
annotate('text',x= label_postion_x_left,y=label_postion_y*max(-log10(data$pvalue)),fontface="bold.italic",size=4,color='red',
label='Genes \n Down Regulated')+
annotate('text',x= label_postion_x_right,y=label_postion_y*max(-log10(data$pvalue)),fontface="bold.italic",size=4,color='red',
label='Genes \n  Up Regulated')
}
devtools::build()
devtools::install()
#' @param compare_list The group to compare, the default is to compare all group
#' @param signif.method The statistical method to use, default is 't.test', also 'wilcox.test'
#' @param signif.position.y The significant mark position
#' @param pal The color matching plate, you can provide a color vector to change the color
#'
#' @return
#' @export
#'
#' @examples plot_bar(data,Group1  = "group1" ,Group2 = 'group2', values  =  "value")
#'
plot_bar <- function(data,Group1=NULL,Group2=NULL,values=NULL,
compare_list=NULL,signif.method='t.test',
legend_position = 'right',plot_line = F,
plot.title = NULL,x.title = NULL,y.title = NULL,
signif.position.y,pal = NULL,map_signif = T ) {
library(ggplot2);library(tidyverse);library(ggrepel);library(ggprism)
group_1 <- Group1
group_2 <- Group2
values <- values
# 配色
if (is.null(pal)) {
pal <- c("#F39B7FFF","#91D1C2FF", "#8491B4FF",
"#E64B35FF", "#4DBBD5FF", "#00A087FF")
}
# -------------1.数据准备-----------------
if (is.null(group_2)) {
df <- data[,c(group_1,values)]
names(df) <- c('group1','value')
} else {
df <- data[,c(group_1,group_2,values)]
names(df) <- c('group1','group2','value')
}
# -------------2.差异分析-----------------
if (is.null(compare_list)) {
# 识别group1中的唯一值
compare <- as.character(unique(df$group1))
# 创建空的compare_list列表
compare_list <- list()
# 循环遍历group1并创建compare_list
for (i in 1:(length(compare)-1)) {
for (j in (i+1):length(compare)) {
compare_list[[length(compare_list)+1]] <- c(compare[i], compare[j])
}
}
compare_list
} else {
compare_list <- compare_list
}
# -------------3.显著性标记位置-----------------
signif.position.y <- c(max(df$value)+max(df$value)*0.2,
max(df$value)+max(df$value)*0.3,
max(df$value)+max(df$value)*0.4)
# --------------4.绘图---------------------------
# 重新映射数据
plot_subdata <- df %>% group_by(group1) %>%
summarise(across(.cols = value, mean))
if (plot_line == F) {
p <- ggplot(df,aes(group1,value,fill=group1,color = group1))+
geom_bar(stat="summary",fun=mean,position="dodge")+ #绘制柱状图
stat_summary(geom = "errorbar",fun.data = 'mean_sd', width = 0.3)+#误差棒
labs(title = plot.title, x=x.title,y=y.title)+#标题
theme_prism(palette = "candy_bright",
base_fontface = "bold", # 字体样式，可选 bold, plain, italic
base_family = "Arial", # 字体格式，可选 serif, sans, mono, Arial等
base_size = 16,  # 图形的字体大小
base_line_size = 0.8, # 坐标轴的粗细
axis_text_angle = 45)+ # 可选值有 0，45，90，270
scale_fill_manual(values = pal)+
scale_color_manual(values = rep('black',100))+
theme(text = element_text(size = 14,family = 'Arial',face = 'bold'),
legend.position = 'none')+
geom_signif(comparisons = compare_list,
map_signif_level = map_signif , #是否使用星号显示
test = signif.method, ##计算方法
y_position = signif.position.y,#图中横线位置设置
tip_length = c(c(0.01,0.01),
c(0.01,0.01),
c(0.01,0.01)),#横线下方的竖线设置
size=0.8,color="black")+
geom_jitter(data=df,aes(group1,value),size=2,pch=20,color="black")
} else {
p <- ggplot(df, aes(x = group1, y = value, fill = group1,color = group1)) +
# 绘制均值点
geom_point(stat = 'summary', fun = 'mean') +
# 绘制均值条形图
geom_bar(stat = 'summary', fun = 'mean') +
# 绘制抖动点图
geom_jitter(size=2,pch=20,color="black",alpha=0.8)+
# 绘制均值的误差线
stat_summary(fun.data = 'mean_sd', geom = 'errorbar', width = 0.1) +
# 绘制分组的虚线
geom_line(data=plot_subdata, aes(x=group1,  y=value,group =1),lty=2,
inherit.aes = F)+
labs(title = plot.title, x=x.title,y=y.title)+#标题
theme_prism(palette = "candy_bright",
base_fontface = "bold", # 字体样式，可选 bold, plain, italic
base_family = "Arial", # 字体格式，可选 serif, sans, mono, Arial等
base_size = 16,  # 图形的字体大小
base_line_size = 0.8, # 坐标轴的粗细
axis_text_angle = 45)+ # 可选值有 0，45，90，270
scale_fill_manual(values = pal)+
scale_color_manual(values = rep('black',100))+
geom_signif(comparisons = compare_list,
map_signif_level = map_signif , #是否使用星号显示
test = signif.method, ##计算方法
y_position = signif.position.y,#图中横线位置设置
tip_length = c(c(0.01,0.01),
c(0.01,0.01),
c(0.01,0.01)),#横线下方的竖线设置
size=0.8,color="black")
}
if (is.null(group_2)) {
plot(p)
} else {
p + facet_grid(~group2,scales = 'free')
}
}
devtools::build()
system.file("data", "protein_coding.Rdata", package = "OneGene")
system.file("data", "cck8.xlsx", package = "OneGene")
data <- openxlsx::read.xlsx('./data//cck8.xlsx')
View(data)
save(cck8.xlsx,file = './data/cck8.Rdata')
save(data,file = './data/cck8.Rdata')
plot_cck8 <- function(data = NULL, time, groups,
plot_title = 'CCK8 assay',
x_title = "time", y_title = "OD450",
legend.position = c(0.1, 0.5),
size = 16,
hide_ns = TRUE, stat_method = "wilcox.test") {
if (is.null(data)) {
path <- system.file("data", "cck8.Rdata", package = "OneGene")
load(path)
message('===> No data provide, it will use the example data')
groups = c('对照组', '实验组1','实验组2')
time = "时间"
}
library(ggpubr)
library(ggsignif)
library(tidyverse)
if (is.null(time) || is.null(groups)) {
stop("Please provide time and groups.")
}
plot_data <- data %>%
select(time, groups) %>%
pivot_longer(cols = -time, names_to = 'group', values_to = 'OD450')
ggline(plot_data, x = time, y = "OD450", group = 'group',size = 1.25,
color = "group", shape = 'group', title = plot_title,
add = "mean_sd", palette = 'lancet',
xlab = x_title, ylab = y_title, legend = legend.position,
ggtheme = theme_minimal(base_size = size)) +
stat_compare_means(label = "p.signif", aes(group = group),
hide.ns = hide_ns, method = stat_method)
}
devtools::build()
devtools::install()
OneGene::plot_cck8(data = NULL)
library(UCSCXenaTools)
?download.file()
library(OneGene)
detach("package:OneGene", unload = TRUE)
